name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - master
      - development
      - 'Feature/**'
  pull_request:
    branches:
      - main
      - master
      - development
      - 'Feature/**'
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply Terraform changes?'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

      destroy:
        description: 'Destroy infrastructure?'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      BRANCH_NAME: ${{ github.ref_name }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Environment Variable
      id: set_env
      run: |
        # if [[ "${GITHUB_REF_NAME}" == "development" || "${GITHUB_REF_NAME}" == Feature/* ]]; then
        #   echo "ENVIRONMENT=Development" >> $GITHUB_ENV
        #   echo "TFVARS_FILE=dev.tfvars" >> $GITHUB_ENV
        if [[ "${GITHUB_REF_NAME}" == "main" || "${GITHUB_REF_NAME}" == "master" ]]; then
          echo "ENVIRONMENT=Development" >> $GITHUB_ENV
          echo "TFVARS_FILE=dev.tfvars" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=Development" >> $GITHUB_ENV
          echo "TFVARS_FILE=dev.tfvars" >> $GITHUB_ENV
        fi

    - name: Debug Environment
      run: |
        echo "BRANCH_NAME: $BRANCH_NAME"
        echo "ENVIRONMENT: $ENVIRONMENT"
        echo "TFVARS_FILE: $TFVARS_FILE"

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::713881790523:role/GitHubActionsOIDCRole
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6

    - name: Terraform Init
      run: |
        echo "Initializing Terraform for $ENVIRONMENT environment"
        terraform init
      working-directory: terraform/environments/${{ env.ENVIRONMENT }}

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: terraform/environments/${{ env.ENVIRONMENT }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/environments/${{ env.ENVIRONMENT }}

    - name: Terraform Plan
      run: terraform plan -var-file="${{ env.TFVARS_FILE }}" -out=tfplan
      working-directory: terraform/environments/${{ env.ENVIRONMENT }}

    # - name: Terraform Apply
    #   if: ${{ github.event.inputs.apply == 'true' && github.event.inputs.destroy != 'true' }}
    #   run: terraform apply -auto-approve tfplan
    #   working-directory: terraform/environments/${{ env.ENVIRONMENT }}

    - name: Terraform Destroy
      if: ${{ github.event.inputs.destroy == 'true' }}
      run: terraform destroy -auto-approve -var-file="${{ env.TFVARS_FILE }}"
      working-directory: terraform/environments/${{ env.ENVIRONMENT }}
